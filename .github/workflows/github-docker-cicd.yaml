name: Github-Docker Hub MLOps pipeline - Streamlit Sentiment Analysis

env:
  DOCKER_USER: ${{secrets.DOCKER_USER}}
  DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
  REPO_NAME: ${{secrets.REPO_NAME}}

# Event Triggers:
# The pipeline is triggered whenever there is a push to the main branch.
# It is also triggered whenever there is a pull request to the main branch.

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci_pipeline: 
    runs-on: ubuntu-latest  # The job runs on the ubuntu-latest operating system
    steps:
      - uses: actions/checkout@v1 
        with:
          fetch-depth: 0
      # Checkout the code with full history

      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
      # Setting up Python 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      # Install dependencies

      - name: Format
        run: |
          black app.py
      # Format the code using Black

      #- name: Lint (optional)
      #  run: |
      #    pylint --disable=R,C app.py
      # Optional: Run Pylint for linting

      #- name: Test (optional)
      #  run: |
      #    python -m pytest -vv test.py
      # Optional: Run tests with pytest

  cd_pipeline:
    runs-on: ubuntu-latest
    needs: [ci_pipeline]

    steps:
      - uses: actions/checkout@v2
        name: Checkout code
      # Checkout the code

      - name: Docker login
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      # Log into Docker Hub

      - name: Get current date
        id: date
        run: echo "DATE_TAG=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
      # Get the current date to use as a tag

      - name: Debug Docker Tag
        run: echo "Docker tag: $DOCKER_USER/$REPO_NAME:${{ env.DATE_TAG }}"
      # Debug step to check the Docker tag format

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag "$DOCKER_USER/$REPO_NAME:${{ env.DATE_TAG }}"
      # Build the Docker image with the tag

      - name: Docker Push
        run: docker push "$DOCKER_USER/$REPO_NAME:${{ env.DATE_TAG }}"
      # Push the Docker image to Docker Hub
